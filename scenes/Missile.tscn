[gd_scene load_steps=8 format=2]

[ext_resource path="res://scenes/ASM.tscn" type="PackedScene" id=1]
[ext_resource path="res://graphics/smoke_mesh.tres" type="QuadMesh" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody

const SPEED = 2

var life = 10 # in seconds
var velocity: Vector3

# missile-specific
var target = null # Spatial node with a transform and a lock_on_target value

func _ready():
	set_process(true)
	set_physics_process(true)

func _process(delta):
	life -= delta
	if life <= 0:
		queue_free()

func _physics_process(delta):
	var collision = null
	if target == null:
		collision = move_and_collide(velocity * SPEED)
	elif target.lock_on_target != null:
		# instantly rotate towards location
		# Get updated target rotation
		var t = transform.looking_at(target.lock_on_target.get_node(\"Center\").global_transform.origin, global_transform.basis.y)
		# Rotate towards destination
		rotation.x = lerp(rotation.x, t.basis.get_euler().x, delta * 5)
		rotation.y = lerp(rotation.y, t.basis.get_euler().y, delta * 5)
		
		# set new velocity: forward direction
		velocity = -transform.basis.z
		# fly towards location
		collision = move_and_collide(velocity * SPEED)
	else: target = null
	
	if collision != null:
		# send \"hit by this bullet\" message to receiver
		if collision.collider.is_in_group(\"enemy\"):
			collision.collider.hit(50)
		# produce effect
		# consider ricocheting
#		if rad2deg(velocity.angle_to(collision.normal)) < 100:
#			velocity = velocity.bounce(collision.normal) / 2
#			# update rotation
#			# look_at(velocity, Vector3(0, 1, 0)) TODO: make this work
#		else:
#			queue_free()
		queue_free()
		print(\"Bullet traveled\")
"

[sub_resource type="BoxShape" id=2]
extents = Vector3( 0.174116, 0.170924, 1 )

[sub_resource type="Curve" id=3]
_data = [ Vector2( 0, 0 ), 0.0, 1.9907, 0, 0, Vector2( 1, 1 ), 0.0172528, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=4]
curve = SubResource( 3 )

[sub_resource type="ParticlesMaterial" id=5]
gravity = Vector3( 0, 0, 0 )
angular_velocity = 0.866025
scale = 5.0
scale_curve = SubResource( 4 )

[node name="Missile" type="KinematicBody"]
script = SubResource( 1 )

[node name="ASM" parent="." instance=ExtResource( 1 )]

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.00494108 )
shape = SubResource( 2 )

[node name="Particles" type="Particles" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.46074 )
amount = 16
lifetime = 0.75
visibility_aabb = AABB( -1.46382, -4, -8.57403, 2.92765, 8, 17.1481 )
local_coords = false
process_material = SubResource( 5 )
draw_pass_1 = ExtResource( 2 )

